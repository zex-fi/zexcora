[project]
name = "zex"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "bitcoinrpc>=0.7.0",
    "eigensdk",
    "eth>=0.0.1",
    "fastapi[standard]>=0.115.8",
    "fastecdsa>=2.3.2",
    "httpx>=0.28.1",
    "loguru>=0.7.3",
    "pandas>=2.2.3",
    "protobuf>=5.29.3",
    "pydantic>=2.10.6",
    "pydantic-settings>=2.7.1",
    "pyfrost",
    "secp256k1>=0.14.0",
    "web3>=7.4.0",
    "zellular",
]

[tool.uv.sources]
eigensdk = { git = "https://github.com/zellular-xyz/eigensdk-python" }
zellular = { git = "https://github.com/zellular-xyz/zellular.py" }
pyfrost = { git = "https://github.com/zellular-xyz/pyfrost" }

[tool.uv.workspace]
members = ["state_manager", "event_distributor", "websocket_service"]

[dependency-groups]
dev = [
    "binance-connector>=3.12.0",
    "colorama>=0.4.6",
    "line-profiler>=4.2.0",
    "pysocks>=1.7.1",
    "pytest>=8.3.4",
    "pytest-asyncio>=0.25.3",
    "ruff>=0.9.4",
    "tqdm>=4.67.1",
]

[tool.ruff]
target-version = "py310"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "E4",
    "E7",
    "E9",
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "W191", # indentation contains tabs
    "B904", # Allow raising exceptions without from e, for HTTPException
]
fixable = ["ALL"]
unfixable = ["B"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable reformatting of code snippets in docstrings.
docstring-code-format = true

[tool.ruff.lint.isort]
from-first = true

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
